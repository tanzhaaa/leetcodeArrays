public class _18maxArea_slow {
    public static int maxArea(int[] height){
        int leftIndex = 0;
        int rightIndex;
        int max = 0;
        int area = 0;
        while(leftIndex < height.length){
            rightIndex = leftIndex + 1;
            while(rightIndex < height.length){
                area = area(height,leftIndex,rightIndex);
                rightIndex ++;
                max = Math.max(max, area);
            }
            leftIndex ++;
        }
        return max;
    }
    private static int area(int[] height, int left, int right){
        int high = Math.min(height[left],height[right]);
        int longSide = right - left ;
        int sum = longSide * high;
        return sum;
    }

    public static void main(String[] args) {
        long startTime = System.currentTimeMillis();
        int[] height = new int[]{1,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7,8,6,2,5,4,8,3,7};
        System.out.println(maxArea(height));
        long endTime = System.currentTimeMillis();
        System.out.println("程序运行时间：" + (endTime - startTime) + "ms");
    }
}
